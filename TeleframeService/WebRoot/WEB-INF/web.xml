<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<context-param>
		<param-name>serverName</param-name>
		<param-value>Teleframe Web Service</param-value>
	</context-param>
	
	<context-param>
		<param-name>qrServicePath</param-name>
		<param-value>/qrimage</param-value>
	</context-param>
	<context-param>
		<param-name>logoPath</param-name>
		<param-value>logo/logo.jpg</param-value>
	</context-param>
	
	
	<!--  e.g : _small.jpg  -->
	<context-param>
		<param-name>smallImageEnd</param-name>
		<param-value>_small.jpg</param-value>
	</context-param>
	
	<!--  e.g : /kk/upload/ITS_upload  -->
	<context-param>
		<param-name>itsImageRoot</param-name>
		<param-value>/kk/upload/ITS_upload</param-value>
	</context-param>
	
	<context-param>
		<param-name>userTimeOut</param-name>
		<param-value>72-hour</param-value>
		<!-- 73-hour 1-min 1-sec -->
	</context-param>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>

	<filter>
		<filter-name>Struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>Struts2</filter-name>
		<url-pattern>*.action</url-pattern>
		<url-pattern>*.jsp</url-pattern>
		<url-pattern>/struts/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>com.listener.Log4jContext</listener-class>
	</listener>
	<listener>
		<listener-class>com.services.ReleaseWebService</listener-class>
	</listener>
	<listener>
		<listener-class>com.listener.TimerListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.listener.JdbcListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.listener.SessionListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.listener.ContextListener</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>log4j</servlet-name>
		<servlet-class>com.listener.Log4jListener</servlet-class>
		<init-param>
			<param-name>log4j</param-name>
			<param-value>/WEB-INF/log4j.properties</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>


	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	
	<listener>
		<listener-class>
			com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>WebSoapServlet</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>WebSoapServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>
	
	<filter>
	    <filter-name>apiFilter</filter-name>
	    <filter-class>com.filter.apiFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>apiFilter</filter-name>
	    <url-pattern>/api/*</url-pattern>
	</filter-mapping>
	
	
	<!-- servlet mapping -->
	<servlet>
	    <servlet-name>downloadServlet</servlet-name>
	    <jsp-file>/download.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
	    <servlet-name>downloadServlet</servlet-name>
	    <url-pattern>/download</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>onlineuser.jsp</servlet-name>
	    <jsp-file>/modules/user/onlineuser.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
	    <servlet-name>onlineuser.jsp</servlet-name>
	    <url-pattern>/online.jsp</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>apkServlet</servlet-name>
	    <jsp-file>/modules/file/upload/apk.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
	    <servlet-name>apkServlet</servlet-name>
	    <url-pattern>/apk</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>onlineuser</servlet-name>
	    <servlet-class>com.services.OnlineUser</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>onlineuser</servlet-name>
	    <url-pattern>/onlineuser/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>userlog</servlet-name>
	    <servlet-class>com.services.UserLog</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>userlog</servlet-name>
	    <url-pattern>/userlog</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>fileservlet</servlet-name>
	    <servlet-class>com.servlet.FileServlet</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>fileservlet</servlet-name>
	    <url-pattern>/file/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>homeServlet</servlet-name>
	    <jsp-file>/welcome.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
	    <servlet-name>homeServlet</servlet-name>
	    <url-pattern>/home</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>userServlet</servlet-name>
	    <servlet-class>com.servlet.UserServlet</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>userServlet</servlet-name>
	    <url-pattern>/user/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>fileupload</servlet-name>
	    <servlet-class>com.storage.uploadServlet.uploadServlet</servlet-class>
	</servlet>
  <servlet>
    <servlet-name>Clchart</servlet-name>
    <servlet-class>chart.Clchart</servlet-class>
  </servlet>
  <servlet>
    <description>This is the description of my J2EE component</description>
    <display-name>This is the display name of my J2EE component</display-name>
    <servlet-name>Xfchart</servlet-name>
    <servlet-class>chart.Xfchart</servlet-class>
  </servlet>
  <servlet>
    <description>This is the description of my J2EE component</description>
    <display-name>This is the display name of my J2EE component</display-name>
    <servlet-name>Clgetdata</servlet-name>
    <servlet-class>chart.Clgetdata</servlet-class>
  </servlet>
  <servlet>
    <description>This is the description of my J2EE component</description>
    <display-name>This is the display name of my J2EE component</display-name>
    <servlet-name>Xfgetdata</servlet-name>
    <servlet-class>chart.Xfgetdata</servlet-class>
  </servlet>
	<servlet>
    	<description>qr code service</description>
    	<servlet-name>qrservice</servlet-name>
    	<servlet-class>com.services.QRImageService</servlet-class>
	</servlet>



	<servlet-mapping>
	    <servlet-name>fileupload</servlet-name>
	    <url-pattern>/upload.do</url-pattern>
	    <url-pattern>/upload</url-pattern>
	</servlet-mapping>
  <servlet-mapping>
    <servlet-name>Clchart</servlet-name>
    <url-pattern>/chart/clchart</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Xfchart</servlet-name>
    <url-pattern>/chart/xfchart</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Clgetdata</servlet-name>
    <url-pattern>/chart/clgetdata</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Xfgetdata</servlet-name>
    <url-pattern>/chart/xfgetdata</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
      <servlet-name>qrservice</servlet-name>
      <url-pattern>/qrservice</url-pattern>
  </servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
</web-app>
